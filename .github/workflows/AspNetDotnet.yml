name: .NET CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  IMAGE_NAME: web-api-demo

jobs:
  release:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
    
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Declare variables
      id: vars
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet publish --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal --logger html --results-directory test_results
      
    - name: Build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: test_results_${{ steps.vars.outputs.branch }}.${{ steps.vars.outputs.sha_short }}
        path: test_results # or path/to/artifact
      
    - name: Build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: web-api-demo_${{ steps.vars.outputs.branch }}.${{ steps.vars.outputs.sha_short }}
        path: WebAppDemo/bin/Debug/net5.0/publish # or path/to/artifact

         
  image:
    needs: release

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Build image
      run: docker build . --file WebAppDemo/Dockerfile --tag $IMAGE_NAME
      
    - name: Log in
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
          
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION      
